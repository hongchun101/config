"--------------插件-------------------"
Plug 'nerdtree'
Plug 'vim-easymotion'
Plug 'vim-surround'
Plug 'argtextobj.vim'
Plug 'vim-exchange'
Plug 'vim-textobj-entire'
Plug 'vim-highlightedyank'
Plug 'vim-paragraph-motion'
Plug 'vim-indent-object'
Plug 'vim-matchit'
Plug 'ReplaceWithRegister'
Plug 'vim-commentary'
Plug 'vim-multiple-cursors'

set nu
set relativenumber
set incsearch
set ignorecase
set smartcase
set autoread
set cursorline
set magic
set clipboard+=unnamed
set scrolloff=1
set syntax=on
set ruler
set noeb
"set notimeout
set timeoutlen=5000
set which-key
"set sneak
set ideamarks
set ic

set ideajoin
let g:argtextobj_pairs="[:],(:),<:>"

let g:which_key_timeout = 1000   " 设置延迟展示时间（以毫秒为单位）

let mapleader=" "
let g:WhichKey_FontSize = 22
let g:qs_primary_color = '#5cff26'
let g:qs_secondary_color = '#4d7fff'
"let g:EasyMotion_override_acejump = 0
"let g:sneak#label = 1

nmap <leader>p <Plug>ReplaceWithRegisterOperator
nmap <leader>pp <Plug>ReplaceWithRegisterLine
xmap <leader>p  <Plug>ReplaceWithRegisterVisual

""" mappings """
nmap <A-e> <action>(RecentProjectListGroup)
nmap H ^
nmap L $
vmap H ^
vmap L $
vnoremap J :action MoveLineDown<CR>
vnoremap K :action MoveLineUp<CR>
nmap [ gT
nmap ] gt
nmap - <action>(OptimizeImports)
nmap R <action>(RenameElement)
"nmap = <action>(ReformatCode)
nmap s <Plug>(easymotion-s2)
nmap f<space> f.
nnoremap = 

vmap p P
"vmap v <action>(EditorSelectWord)
"vmap V <action>(EditorUnSelectWord)

" g命令
nnoremap ga '.
nmap gn <action>(NextSplitter)
nmap gj <action>(VcsShowNextChangeMarker)
nmap gk <action>(VcsShowPrevChangeMarker)
nmap gs <action>(GotoSuperMethod)
nmap gi <action>(GotoImplementation)
nmap gd <action>(GotoDeclaration)
nmap ge <action>(GotoNextError)
nmap gE <action>(GotoPreviousError)
nmap gu <action>(quickjavadoc)
nmap gh <action>(Back)
nmap gl <action>(Forward)

" z命令
nmap zk <action>(MethodUp)
nmap zj <action>(MethodDown)
nmap zz <action>(ToggleLineBreakpoint)
nmap zg <action>(Generate)
nnoremap zh 50zh
nnoremap zl 50zl

let g:WhichKeyDesc_ShowIntentionActions="<leader>h"
nmap <leader>h <action>(ShowIntentionActions)
let g:WhichKeyDesc_Rename="<leader>r rename"
nmap <leader>r <action>(RenameElement)

" leader键映射
nmap <leader><leader>c <action>(CodeMenu)

""" nerdtree """
let g:WhichKeyDesc_Nerdtree="<leader>o NerdTree"
nmap <leader>o :NERDTreeFind<CR>

nmap <leader>nn <action>(NewClass)
nmap <leader>nd <action>(NewDir)
nmap <leader>nf <ACTION>(NewFile)

""" arthas """
let g:WhichKeyDesc_Arthas="<leader>a arthas"
nmap <leader>at <action>(ArthasTrace)
nmap <leader>aw <action>(ArthasWatch)


""" Git """
let g:WhichKeyDesc_Git="<leader>g git"
nmap gr <action>(Vcs.RollbackChangedLines)
nmap <leader>ga <action>(Annotate)
nmap <leader>gk <action>(ActivateCommitToolWindow)
nmap <leader>gc <action>(Git.CompareWithBranch)
nmap <leader>gH <action>(Vcs.ShowTabbedFileHistory)
nmap <leader>gh <action>(Vcs.ShowHistoryForBlock)
nmap <leader>gp <action>(Git.Pull)
nmap <leader>gP <action>(Vcs.Push)
nmap <leader>gl <action>(Vcs.Show.Log)
nmap <leader>gf <action>(Git.Fetch)
nmap <leader>gb <action>(Git.Branches)
"nmap <leader>gt <action>(Git.Tag)
nmap <leader>gn <action>(Git.CreateNewBranch)
nmap <leader>g= <action>(Git.Add)
nmap <leader>gs <action>(ChangesView.Shelve)
let g:WhichKeyDesc_Git_MergeRequest="<leader>gm merge request"
nmap <leader>gm <action>(GitLab_Helper.Merge)
nmap <leader>gM <action>(Git.Merge)
nmap <leader>gR <action>(Git.Rebase)


""" Copy Close """
let g:WhichKeyDesc_CC="<leader><leader>c copy/close"
nmap <leader><leader>cn <action>(CopyFileName)
nmap <leader><leader>cr <action>(CopyReference)
nmap <leader><leader>cs <action>(CopySourceRootPath)
nmap <leader><leader>cp <action>(CloseProject)


""" Debug Run Test """
let g:WhichKeyDesc_DR="<leader>d debug/run/test"
nmap <leader>dd <action>(Debug)
nmap <leader>dj <action>(JRebel Debug)
nmap <leader>ds <action>(Stop)
nmap <leader>dv <action>(ViewBreakpoints)
nmap <leader>dc <action>(RunConfiguration)
nmap <leader>du <action>(UpdateRunningApplication)
nmap <leader>dr <action>(Run)
nmap <leader>dt <action>(GotoTest)

""" lsp """
nmap <leader>lS <action>(ActivateStructureToolWindow)
nmap <leader>ls <action>(FileStructurePopup)

nmap <leader>eh <action>(MoveElementLeft)
nmap <leader>el <action>(MoveElementRight)

nmap <leader>lo <action>(OverrideMethods)
nmap <leader>li <action>(ImplementMethods)

nmap <leader>lm <action>(ExtractMethod)
vmap <leader>lm <action>(ExtractMethod)
nmap <leader>lc <action>(IntroduceConstant)
vmap <leader>lc <action>(IntroduceConstant)
nmap <leader>lf <action>(IntroduceField)
vmap <leader>lf <action>(IntroduceField)
nmap <leader>lp <action>(IntroduceParameter)
vmap <leader>lp <action>(IntroduceParameter)
nmap <leader>lv <action>(IntroduceVariable)
vmap <leader>lv <action>(IntroduceVariable)
nmap <leader>ii <action>(Inline)
vmap <leader>ii <action>(Inline)

nmap <leader>ld <action>(MemberPushDown)
nmap <leader>lu <action>(MembersPullUp)

nmap <leader>lC <action>(ExtractClass)
vmap <leader>lC <action>(ExtractClass)
nmap <leader>lI <action>(ExtractInterface)
vmap <leader>lI <action>(ExtractInterface)
nmap <leader>lP <action>(ExtractSuperclass)
vmap <leader>lP <action>(ExtractSuperclass)


nmap <leader>llp <action>(IntroduceFunctionParameter)
vmap <leader>llp <action>(IntroduceFunctionParameter)
nmap <leader>llv <action>(IntroduceFunctionVariable)
vmap <leader>llv <action>(IntroduceFunctionVariable)

nmap <leader><leader>hm <action>(MethodHierarchy)
nmap <leader><leader>ht <action>(TypeHierarchy)
nmap <leader><leader>hc <action>(CallHierarchy)

""" maven """
let g:whichkeydesc_maven="<leader><leader>m maven"
nmap <leader>mm <action>(Maven.ExecuteGoal)
nmap <leader>mi <action>(Maven.Reimport)
nmap <leader>ms <action>(coderead.maven.search)



""" file """
let g:WhichKeyDesc_File="<leader>f file"
let g:WhichKeyDesc_File_History="<leader>fh file history"
nmap <leader>fh <action>(LocalHistory.ShowHistory)
let g:WhichKeyDesc_Find_Action="<leader>fa action"
nmap <leader>fa <action>(GotoAction)
let g:WhichKeyDesc_File_Open="<leader>fe open in explorer"
nmap <leader>fe <action>(RevealIn)
let g:WhichKeyDesc_File_Copy="<leader>fc file copy"
nmap <leader>fc <action>(CopyElement)
nmap <leader>fo <action>(RecentFiles)
nmap <leader>ff <action>(GotoFile)
nmap <leader>fw <action>(FindInPath)
nmap <leader>fr <action>(Tool.GotoRequestService)
nmap <leader>fp <action>(ManageRecentProjects)

let g:WhichKeyDesc_Sonar_Analyze="<leader>ss analyze"
let g:WhichKeyDesc_Sonar="<leader>s sonar"
nmap <leader>ss <action>(SonarLint.AnalyzeFiles)
let g:WhichKeyDesc_Sonar_AnalyzeAll="<leader>sa analyze all"
nmap <leader>sa <action>(SonarLint.AnalyzeAllFiles)
let g:WhichKeyDesc_Sonar_AnalyzeChange="<leader>sc analyze change"
nmap <leader>sc <action>(SonarLint.AnalyzeChangedFiles)


let g:WhichKeyDesc_Vim="<leader>v vim"
let g:WhichKeyDesc_Vim_EditVimrc="<leader>ve edit vimrc"
nmap <leader>ve :e ~\\.ideavimrc<CR>
let g:WhichKeyDesc_Vim_Source="<leader>vs source"
nmap <leader>vs :source ~\\.ideavimrc<CR>

""" buffer window """
let g:WhichKeyDesc_Buffer="<leader>b buffer"
nmap <leader>bc <action>(CloseAllEditorsButActive)
nmap <leader>bl <action>(CloseAllToTheLeft)
nmap <leader>br <action>(CloseAllToTheRight)
nmap <leader>bu <action>(CloseAllUnmodifiedEditors)

let g:WhichKeyDesc_Window="<leader>w window"

let g:WhichKeyDesc_Buffer_W="<leader>w save"
nmap <leader>w :w<CR>

let g:WhichKeyDesc_Buffer_Delete="<leader>c close buffer"
nmap <leader>c :bdelete<CR>
let g:WhichKeyDesc_Buffer="<leader>b buffer"

nmap <leader>tn <action>(tasks.goto)
nmap <leader>ts <action>(tasks.switch)
nmap <leader>tc <action>(tasks.close)


""" Translate """ 
let g:WhichKeyDesc_Y="<leader>y"
let g:WhichKeyDesc_y="<leader>Y"
nmap <leader>y <action>($EditorTranslateAction)
vmap <leader>y <action>($EditorTranslateAction)
nmap <leader>Y <action>($TranslateAndReplaceAction)


    """ UI/UX """
let g:WhichKeyDesc_U="<leader>u UI/UX"
let g:WhichKeyDesc_UF="<leader>uf toggle full screen"
let g:WhichKeyDesc_UP="<leader>up toggle presentation mode "
let g:WhichKeyDesc_UC="<leader>uc toggle compact mode "
let g:WhichKeyDesc_UT="<leader>up toggle tool bar"
let g:WhichKeyDesc_US="<leader>us toggle status bar"


nmap <leader>uf <action>(ToggleFullScreen)
nmap <leader>up <action>(TogglePresentationMode)
nmap <leader>uc <action>(ToggleCompactMode)
nmap <leader>ut <action>(ViewToolButtons)
nmap <leader>us <action>(ViewStatusBar)


""" Expand and Collapse """
nmap zo <action>(ExpandRegion)
nmap zO <action>(ExpandAllRegions)
nmap zc <action>(CollapseRegion)
nmap zC <action>(CollapseAllRegions)


""" Bookmark """
nmap '0 <action>(ToggleBookmark0)
nmap '1 <action>(ToggleBookmark1)
nmap '2 <action>(ToggleBookmark2)
nmap '3 <action>(ToggleBookmark3)
nmap '4 <action>(ToggleBookmark4)
nmap '5 <action>(ToggleBookmark5)
nmap '6 <action>(ToggleBookmark6)
nmap '7 <action>(ToggleBookmark7)
nmap '8 <action>(ToggleBookmark8)
nmap '9 <action>(ToggleBookmark9)
nmap '1 <action>(ToggleBookmark1)
nmap 'a <action>(ToggleBookmarkA)
nmap 'b <action>(ToggleBookmarkB)
nmap 'c <action>(ToggleBookmarkC)
nmap 'd <action>(ToggleBookmarkD)
nmap 'e <action>(ToggleBookmarkE)
nmap 'f <action>(ToggleBookmarkF)
nmap 'g <action>(ToggleBookmarkG)
nmap 'h <action>(ToggleBookmarkH)
nmap 'i <action>(ToggleBookmarkI)
nmap 'j <action>(ToggleBookmarkJ)
nmap 'k <action>(ToggleBookmarkK)
nmap 'l <action>(ToggleBookmarkL)
nmap 'm <action>(ToggleBookmarkM)
nmap 'n <action>(ToggleBookmarkN)
nmap 'o <action>(ToggleBookmarkO)
nmap 'p <action>(ToggleBookmarkP)
nmap 'q <action>(ToggleBookmarkQ)
nmap 'r <action>(ToggleBookmarkR)
nmap 's <action>(ToggleBookmarkS)
nmap 't <action>(ToggleBookmarkT)
nmap 'u <action>(ToggleBookmarkU)
nmap 'v <action>(ToggleBookmarkV)
nmap 'w <action>(ToggleBookmarkW)
nmap 'x <action>(ToggleBookmarkX)
nmap 'y <action>(ToggleBookmarkY)
nmap 'z <action>(ToggleBookmarkZ)

nmap m; <action>(ShowBookmarks)
nmap m0 <action>(GotoBookmark0)
nmap m1 <action>(GotoBookmark1)
nmap m2 <action>(GotoBookmark2)
nmap m3 <action>(GotoBookmark3)
nmap m4 <action>(GotoBookmark4)
nmap m5 <action>(GotoBookmark5)
nmap m6 <action>(GotoBookmark6)
nmap m7 <action>(GotoBookmark7)
nmap m8 <action>(GotoBookmark8)
nmap m9 <action>(GotoBookmark9)
nmap ma <action>(GotoBookmarkA)
nmap mb <action>(GotoBookmarkB)
nmap mc <action>(GotoBookmarkC)
nmap md <action>(GotoBookmarkD)
nmap me <action>(GotoBookmarkE)
nmap mf <action>(GotoBookmarkF)
nmap mg <action>(GotoBookmarkG)
nmap mh <action>(GotoBookmarkH)
nmap mi <action>(GotoBookmarkI)
nmap mj <action>(GotoBookmarkJ)
nmap mk <action>(GotoBookmarkK)
nmap ml <action>(GotoBookmarkL)
nmap mm <action>(GotoBookmarkM)
nmap mn <action>(GotoBookmarkN)
nmap mo <action>(GotoBookmarkO)
nmap mp <action>(GotoBookmarkP)
nmap mq <action>(GotoBookmarkQ)
nmap mr <action>(GotoBookmarkR)
nmap ms <action>(GotoBookmarkS)
nmap mt <action>(GotoBookmarkT)
nmap mu <action>(GotoBookmarkU)
nmap mv <action>(GotoBookmarkV)
nmap mw <action>(GotoBookmarkW)
nmap mx <action>(GotoBookmarkX)
nmap my <action>(GotoBookmarkY)
nmap mz <action>(GotoBookmarkZ)

" idea快捷键中需设置Up/Down为<C-k>/<C-j>
sethandler <C-j> a:vim i:vim
sethandler <C-k> a:vim i:vim